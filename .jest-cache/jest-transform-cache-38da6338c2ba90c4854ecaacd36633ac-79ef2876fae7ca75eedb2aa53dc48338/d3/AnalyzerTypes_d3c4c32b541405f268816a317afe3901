7262792334d43f658f9e74a4cab0e212
"use strict";
/**
 * 逻辑分析器类型定义
 * 基于C# SharedDriver模块的TypeScript移植
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TriggerDelays = exports.TriggerType = exports.CaptureError = exports.CaptureMode = exports.AnalyzerDriverType = void 0;
// 枚举类型定义
/* eslint-disable no-unused-vars */
var AnalyzerDriverType;
(function (AnalyzerDriverType) {
    AnalyzerDriverType["Serial"] = "Serial";
    AnalyzerDriverType["Network"] = "Network";
    AnalyzerDriverType["Multi"] = "Multi";
    AnalyzerDriverType["Emulated"] = "Emulated";
    AnalyzerDriverType["Single"] = "Single";
})(AnalyzerDriverType = exports.AnalyzerDriverType || (exports.AnalyzerDriverType = {}));
var CaptureMode;
(function (CaptureMode) {
    CaptureMode[CaptureMode["Channels_8"] = 0] = "Channels_8";
    CaptureMode[CaptureMode["Channels_16"] = 1] = "Channels_16";
    CaptureMode[CaptureMode["Channels_24"] = 2] = "Channels_24";
})(CaptureMode = exports.CaptureMode || (exports.CaptureMode = {}));
var CaptureError;
(function (CaptureError) {
    CaptureError["None"] = "None";
    CaptureError["Busy"] = "Busy";
    CaptureError["BadParams"] = "BadParams";
    CaptureError["HardwareError"] = "HardwareError";
    CaptureError["UnexpectedError"] = "UnexpectedError";
})(CaptureError = exports.CaptureError || (exports.CaptureError = {}));
var TriggerType;
(function (TriggerType) {
    TriggerType[TriggerType["Edge"] = 0] = "Edge";
    TriggerType[TriggerType["Complex"] = 1] = "Complex";
    TriggerType[TriggerType["Fast"] = 2] = "Fast";
    TriggerType[TriggerType["Blast"] = 3] = "Blast";
})(TriggerType = exports.TriggerType || (exports.TriggerType = {}));
// 常量定义
exports.TriggerDelays = {
    ComplexTriggerDelay: 5,
    FastTriggerDelay: 3 // 快速触发延迟 (纳秒)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,