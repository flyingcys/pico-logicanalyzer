/**
 * English language pack
 */

export default {
  // Common vocabulary
  common: {
    ok: 'OK',
    cancel: 'Cancel',
    close: 'Close',
    save: 'Save',
    load: 'Load',
    export: 'Export',
    import: 'Import',
    reset: 'Reset',
    clear: 'Clear',
    delete: 'Delete',
    add: 'Add',
    edit: 'Edit',
    search: 'Search',
    filter: 'Filter',
    settings: 'Settings',
    help: 'Help',
    refresh: 'Refresh',
    start: 'Start',
    stop: 'Stop',
    pause: 'Pause',
    resume: 'Resume',
    connect: 'Connect',
    disconnect: 'Disconnect',
    enabled: 'Enabled',
    disabled: 'Disabled',
    yes: 'Yes',
    no: 'No',
    loading: 'Loading...',
    saving: 'Saving...',
    processing: 'Processing...',
    completed: 'Completed',
    error: 'Error',
    warning: 'Warning',
    info: 'Info',
    success: 'Success',
    test: 'Test Communication',
    testMessage: 'Test message from Vue frontend',
    messageSent: 'Test message sent'
  },

  // Device management
  device: {
    title: 'Device Manager',
    connected: 'Device Connected',
    disconnected: 'Device Disconnected',
    connect: 'Connect Device',
    connecting: 'Connecting...',
    name: 'Device Name',
    type: 'Device Type',
    version: 'Version',
    serialNumber: 'Serial Number',
    status: 'Status',
    capabilities: 'Device Capabilities',
    channels: 'Channels',
    maxSampleRate: 'Max Sample Rate',
    bufferSize: 'Buffer Size',
    triggerTypes: 'Trigger Types',
    autoConnect: 'Auto Connect',
    connectionSettings: 'Connection Settings',
    port: 'Port',
    baudRate: 'Baud Rate',
    timeout: 'Timeout',
    retryCount: 'Retry Count',
    driverInfo: 'Driver Info',
    noDeviceFound: 'No Device Found',
    deviceError: 'Device Error',
    connectionFailed: 'Connection Failed',
    selectDevice: 'Select Device',
    refreshDevices: 'Refresh Device List'
  },

  // Capture settings
  capture: {
    title: 'Capture Settings',
    basic: 'Basic Settings',
    advanced: 'Advanced Settings',
    channels: 'Channel Selection',
    triggers: 'Trigger Settings',
    frequency: 'Sample Frequency',
    duration: 'Capture Duration',
    samples: 'Sample Count',
    preTrigger: 'Pre-trigger',
    postTrigger: 'Post-trigger',
    triggerType: 'Trigger Type',
    triggerChannel: 'Trigger Channel',
    triggerValue: 'Trigger Value',
    triggerPattern: 'Trigger Pattern',
    edgeTrigger: 'Edge Trigger',
    levelTrigger: 'Level Trigger',
    patternTrigger: 'Pattern Trigger',
    risingEdge: 'Rising Edge',
    fallingEdge: 'Falling Edge',
    bothEdges: 'Both Edges',
    highLevel: 'High Level',
    lowLevel: 'Low Level',
    continuous: 'Continuous',
    single: 'Single Shot',
    start: 'Start Capture',
    stop: 'Stop Capture',
    capturing: 'Capturing...',
    blastMode: 'Blast Mode',
    compressionEnabled: 'Data Compression',
    validation: {
      frequencyRequired: 'Please set sample frequency',
      durationRequired: 'Please set capture duration',
      channelRequired: 'Please select at least one channel',
      triggerChannelRequired: 'Please select trigger channel',
      invalidFrequency: 'Invalid sample frequency',
      invalidDuration: 'Invalid capture duration'
    }
  },

  // Channel control
  channel: {
    title: 'Channel Control',
    name: 'Channel Name',
    visible: 'Visible',
    hidden: 'Hidden',
    enabled: 'Enabled',
    disabled: 'Disabled',
    color: 'Color',
    position: 'Position',
    height: 'Height',
    offset: 'Offset',
    statistics: 'Statistics',
    totalSamples: 'Total Samples',
    highSamples: 'High Samples',
    lowSamples: 'Low Samples',
    transitions: 'Transitions',
    frequency: 'Frequency',
    dutyCycle: 'Duty Cycle',
    pulseCount: 'Pulse Count',
    showAll: 'Show All',
    hideAll: 'Hide All',
    selectAll: 'Select All',
    selectNone: 'Select None',
    invertSelection: 'Invert Selection',
    resetColors: 'Reset Colors',
    autoArrange: 'Auto Arrange',
    exportSettings: 'Export Settings',
    importSettings: 'Import Settings',
    channelGroup: 'Channel Group',
    groupName: 'Group Name',
    createGroup: 'Create Group',
    deleteGroup: 'Delete Group',
    addToGroup: 'Add to Group',
    removeFromGroup: 'Remove from Group',
    searchChannels: 'Search Channels',
    filterByName: 'Filter by Name',
    filterByState: 'Filter by State',
    sortByName: 'Sort by Name',
    sortByPosition: 'Sort by Position'
  },

  // Protocol decoder
  decoder: {
    title: 'Protocol Decoder',
    protocol: 'Protocol',
    channels: 'Channel Assignment',
    settings: 'Decoder Settings',
    results: 'Decoder Results',
    activeDecoders: 'Active Decoders',
    add: 'Add Decoder',
    remove: 'Remove Decoder',
    configure: 'Configure',
    enable: 'Enable',
    disable: 'Disable',
    i2c: 'I2C',
    spi: 'SPI',
    uart: 'UART',
    can: 'CAN',
    rs232: 'RS232',
    manchester: 'Manchester',
    custom: 'Custom',
    clockChannel: 'Clock Channel',
    dataChannel: 'Data Channel',
    baudRate: 'Baud Rate',
    dataBits: 'Data Bits',
    stopBits: 'Stop Bits',
    parity: 'Parity',
    bitOrder: 'Bit Order',
    msbFirst: 'MSB First',
    lsbFirst: 'LSB First',
    showHex: 'Show Hex',
    showAscii: 'Show ASCII',
    showBinary: 'Show Binary',
    annotations: 'Annotations',
    errorCount: 'Error Count',
    frameCount: 'Frame Count',
    export: 'Export Results',
    clear: 'Clear Results'
  },

  // Measurement tools
  measurement: {
    title: 'Measurement Tools',
    pulse: 'Pulse Analysis',
    frequency: 'Frequency Measurement',
    timing: 'Timing Analysis',
    statistics: 'Statistical Analysis',
    comparison: 'Comparison Analysis',
    jitter: 'Jitter Analysis',
    channel: 'Channel',
    timeRange: 'Time Range',
    startTime: 'Start Time',
    endTime: 'End Time',
    duration: 'Duration',
    period: 'Period',
    duty: 'Duty Cycle',
    riseTime: 'Rise Time',
    fallTime: 'Fall Time',
    amplitude: 'Amplitude',
    minimum: 'Minimum',
    maximum: 'Maximum',
    average: 'Average',
    standardDeviation: 'Standard Deviation',
    variance: 'Variance',
    rms: 'RMS',
    positive: 'Positive Pulse',
    negative: 'Negative Pulse',
    count: 'Count',
    width: 'Width',
    predicted: 'Predicted',
    actual: 'Actual',
    distribution: 'Distribution',
    histogram: 'Histogram',
    export: 'Export Data',
    addCursor: 'Add Cursor',
    removeCursor: 'Remove Cursor',
    measureBetween: 'Measure Between',
    autoMeasure: 'Auto Measure',
    manualMeasure: 'Manual Measure'
  },

  // Status bar
  status: {
    ready: 'Ready',
    preparing: 'Preparing',
    capturing: 'Capturing',
    processing: 'Processing',
    completed: 'Completed',
    error: 'Error',
    samples: 'Samples',
    frequency: 'Frequency',
    duration: 'Duration',
    channels: 'Channels',
    decoders: 'Decoders',
    hasData: 'Has Data',
    performance: 'Performance',
    cpu: 'CPU Usage',
    memory: 'Memory Usage',
    file: 'File',
    modified: 'Modified',
    zoom: 'Zoom',
    time: 'Time',
    cancel: 'Cancel',
    notification: {
      dismissed: 'Notification dismissed',
      captureStarted: 'Capture started',
      captureCompleted: 'Capture completed',
      captureFailed: 'Capture failed',
      deviceConnected: 'Device connected',
      deviceDisconnected: 'Device disconnected',
      fileLoaded: 'File loaded',
      fileSaved: 'File saved',
      settingsApplied: 'Settings applied'
    }
  },

  // Theme management
  theme: {
    title: 'Appearance Settings',
    mode: 'Theme Mode',
    light: 'Light',
    dark: 'Dark',
    auto: 'Auto',
    primaryColor: 'Primary Color',
    fontSize: 'Font Size',
    current: 'Current',
    preview: 'Sample Text',
    density: 'UI Density',
    compact: 'Compact',
    default: 'Default',
    comfortable: 'Comfortable',
    componentSize: 'Component Size',
    small: 'Small',
    large: 'Large',
    animation: 'Animation Effects',
    enabled: 'Enable Animations',
    disabled: 'Disable Animations',
    speed: 'Animation Speed',
    layout: 'Layout Settings',
    sidebar: 'Sidebar',
    leftSidebar: 'Show Left Sidebar',
    rightSidebar: 'Show Right Sidebar',
    collapsible: 'Collapsible',
    width: 'Sidebar Width',
    toolbar: 'Toolbar',
    showIcons: 'Show Icons',
    showText: 'Show Text',
    position: 'Position',
    top: 'Top',
    bottom: 'Bottom',
    left: 'Left',
    right: 'Right',
    responsive: 'Responsive Breakpoints',
    currentBreakpoint: 'Current',
    viewportSize: 'Viewport Size',
    breakpoints: {
      xs: 'Extra Small',
      sm: 'Small',
      md: 'Medium',
      lg: 'Large',
      xl: 'Extra Large'
    },
    customCSS: 'Custom Styles',
    cssReference: 'CSS Variables Reference',
    colorVariables: 'Color Variables',
    sizeVariables: 'Size Variables',
    fontVariables: 'Font Variables',
    resetDefaults: 'Reset to Defaults',
    exportSettings: 'Export Settings',
    importSettings: 'Import Settings',
    settingsExported: 'Theme settings exported',
    settingsImported: 'Theme settings imported',
    resetCompleted: 'Reset to default settings',
    invalidFile: 'Invalid settings file format'
  },

  // File operations
  file: {
    title: 'File Operations',
    new: 'New',
    open: 'Open',
    save: 'Save',
    saveAs: 'Save As',
    close: 'Close',
    recent: 'Recent Files',
    format: 'File Format',
    lacFormat: 'LAC Format',
    csvFormat: 'CSV Format',
    jsonFormat: 'JSON Format',
    vcdFormat: 'VCD Format',
    exportAs: 'Export As',
    importFrom: 'Import From',
    fileNotFound: 'File not found',
    fileCorrupted: 'File corrupted',
    unsavedChanges: 'Unsaved changes',
    saveChanges: 'Save changes?',
    discardChanges: 'Discard changes',
    overwriteFile: 'File exists, overwrite?',
    untitled: 'Untitled File'
  },

  // Help information
  help: {
    title: 'Help',
    userGuide: 'User Guide',
    shortcuts: 'Keyboard Shortcuts',
    about: 'About',
    version: 'Version',
    documentation: 'Documentation',
    support: 'Technical Support',
    feedback: 'Feedback',
    updates: 'Check for Updates',
    license: 'License',
    thirdParty: 'Third-party Components',
    contact: 'Contact Us'
  },

  // Waveform display
  waveform: {
    title: 'Waveform Display',
    zoomIn: 'Zoom In',
    zoomOut: 'Zoom Out',
    fitWindow: 'Fit to Window',
    noData: 'No data available, please start data capture first'
  },

  // Error messages
  error: {
    unknown: 'Unknown error',
    network: 'Network error',
    timeout: 'Operation timeout',
    permission: 'Permission denied',
    notSupported: 'Operation not supported',
    invalidInput: 'Invalid input',
    deviceNotFound: 'Device not found',
    connectionLost: 'Connection lost',
    bufferOverflow: 'Buffer overflow',
    memoryError: 'Memory error',
    fileError: 'File error',
    protocolError: 'Protocol error',
    configError: 'Configuration error',
    retry: 'Retry',
    ignore: 'Ignore',
    reportBug: 'Report Issue',
    apiNotAvailable: 'VSCode API not available'
  }
};